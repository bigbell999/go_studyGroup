1.
go는 c언어와 비슷하게 컴파일러는 특정 함수(main)와 package(main)을 먼저
찾아 실행시키려 함.

2. 
따라서 main package와 main 함수 없이는 컴파일 될 수 없음.

3.
fmt = formatting

4. 
Println이 대문자로 시작하는 이유
다른 패키지로 함수를 export하기 위해서는 대문자로 시작해야함
소문자는 private 그 파일에서 밖에 사용 불가능..

5. 
go는 상수의 type을 정해주어야 함.

6. 
변수는
변수이름 := 값 (축약형)
ex)
var name string = "유승종"
name := "유승종"
단, 축약형은 함수내에서만 사용가능.

7.
할당된 type은 변경되지 않음.

8.
함수 인자의 type는 인자 뒤에, 함수 반환값의 type은 함수 뒤에

9. 
하나의 함수가 여러개의 반환값을 가질 수 있음.
쓰지 않고 싶은 value가 있다면 _ (ignored value)로 할당해주면 됨.

10.
개수가 지정되지 않은 인자를 받으려면 인자의 type앞에 ...
-> array로 저장됨.

11. 
naked return 
함수 반환값에 반환될 변수를 선언가능.
마지막에 return만 써주면 알아서 찾아줌.

12.
defer 함수가 return한 뒤 실행되는 코드.

13. 
range 첫번째 반환값은 array의 index값, 두번째 반환값은 array의 원소값.
range는 for안에서만 사용할 수 있음.

14. 
variable expression
if-else/switch를 시작하면서 변수를 선언가능.
이때 이 변수는 if-else문 안에서만 사용되는 지역변수임.

15. 
array
array := [크기]type{} 선언

16. 
slice: 길이가 정해지지 않은 array

17. 
slice에 item추가 
-> append(slice, item): item을 추가한 slice return

18.
map == 파이썬의 dic
map이름 := map[key의 자료형]value의 자료형{x: y}

19.
map도 for문에서 range를 통해 순회가능.
이때 반환값은 key, value

20.
struct c언어의 구조체와 같음
type 구조체 이름 struct{
구조체 요소
}
21
변수이름 := 구조체이름{요소들}로 선언하거나 {field: value...}로 선언가능
후자를 권장.